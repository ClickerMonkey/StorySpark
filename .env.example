# ============================================================================
# StorySpark Environment Configuration
# ============================================================================
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control - it contains secrets!
# ============================================================================

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL database connection string
# REQUIRED: Yes - Application will fail to start without this
# Format: postgresql://username:password@host:port/database
# Example (local): postgresql://user:password@localhost:5432/storymaker
# Example (Neon): postgresql://user:password@ep-xxx.us-east-2.aws.neon.tech/dbname?sslmode=require
# Used in: server/db.ts, drizzle.config.ts
DATABASE_URL=postgresql://user:password@localhost:5432/storymaker

# ============================================================================
# GOOGLE OAUTH CONFIGURATION
# ============================================================================
# Get these credentials from: https://console.cloud.google.com/apis/credentials
# 1. Create a new OAuth 2.0 Client ID (Web application)
# 2. Add authorized JavaScript origins (e.g., http://localhost:5000)
# 3. Add authorized redirect URIs (e.g., http://localhost:5000/api/callback)

# Google OAuth Client ID
# REQUIRED: Yes - Used for Google Sign-In authentication
# Format: xxxxxxxxxxxx-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.apps.googleusercontent.com
# Used in: server/auth.ts (OAuth2Client initialization and token verification), server/routes.ts
GOOGLE_CLIENT_ID=your_google_client_id_here

# Google OAuth Client Secret
# REQUIRED: Yes - Used for OAuth token exchange
# Format: GOCSPX-xxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Used in: server/auth.ts, server/routes.ts (OAuth callback)
GOOGLE_CLIENT_SECRET=your_google_client_secret_here

# Google OAuth Redirect URI
# REQUIRED: No - Defaults to standard callback endpoint if not specified
# Default: Not set (uses OAuth2Client default behavior)
# Format: https://your-domain.com/api/callback or http://localhost:5000/api/callback
# Used in: server/auth.ts (OAuth2Client initialization)
# Note: This must match one of the authorized redirect URIs in your Google Console
GOOGLE_REDIRECT_URI=http://localhost:5000/api/callback

# ============================================================================
# AUTHENTICATION & SECURITY
# ============================================================================

# JWT Secret Key
# REQUIRED: Yes - Used to sign and verify JWT authentication tokens
# Format: Any random string (minimum 32 characters recommended)
# Valid values: Any string, but use a cryptographically secure random string
# Security: Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
# Used in: server/auth.ts (generateJWT, verifyJWT functions)
# Token expiration: 7 days
JWT_SECRET=your_jwt_secret_here

# Encryption Key for User API Keys
# REQUIRED: Yes - Used to encrypt user's API keys in the database
# Format: EXACTLY 32 characters (any characters)
# Valid values: Any 32-character string
# Default: Falls back to 'dev-key-32-chars-long-12345678' (INSECURE - dev only!)
# Security: Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('base64').slice(0, 32))"
# Used in: server/utils/encryption.ts (encryptApiKey, decryptApiKey)
# Algorithm: AES-256-CBC with random IV per encryption
# WARNING: Changing this key will make existing encrypted keys unreadable!
# WARNING: MUST be set in production - fallback is only for development!
ENCRYPTION_KEY=your-32-character-encryption-key

# ============================================================================
# SERVER CONFIGURATION
# ============================================================================

# Server Port
# REQUIRED: No
# Default: 5000
# Valid values: 1-65535 (use 1024-49151 for unprivileged ports)
# Used in: server/index.ts
# Note: In production (Replit, etc.), this is usually set by the platform
PORT=5000

# Node Environment
# REQUIRED: No
# Default: development (if not set)
# Valid values: "development", "production", "test"
# Used in: vite.config.ts, server/routes.ts
# Effects:
#   - development: Enables Vite dev server, detailed error messages
#   - production: Serves static files, minimal logging
NODE_ENV=development

# Replit ID (Replit-specific)
# REQUIRED: No - Only used in Replit development environment
# Default: undefined
# Valid values: Any string (automatically set by Replit)
# Used in: vite.config.ts (enables Replit-specific plugins)
# Note: Automatically set by Replit platform - DO NOT manually set
# REPL_ID=

# ============================================================================
# FREE MODE CONFIGURATION (OPTIONAL)
# ============================================================================
# These are OPTIONAL server-wide API keys used for users in "free mode"
# If not set, free mode users won't be able to generate images
# Regular users always use their own API keys (not these)

# Server's OpenAI API Key (for free mode users)
# REQUIRED: No - Only needed if you want to offer free mode
# Default: undefined (free mode users can't use OpenAI without this)
# Format: sk-proj-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Get from: https://platform.openai.com/api-keys
# Used in: server/services/imageGeneration.ts (getApiKeys function)
# Security: This will be charged to YOUR OpenAI account for free mode users
# Recommendation: Set usage limits in OpenAI dashboard to prevent abuse
# OPENAI_API_KEY=

# Server's Replicate API Key (for free mode users)
# REQUIRED: No - Only needed if you want to offer free mode with Replicate
# Default: undefined (free mode users can't use Replicate without this)
# Format: r8_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Get from: https://replicate.com/account/api-tokens
# Used in: server/services/imageGeneration.ts (getApiKeys function)
# Security: This will be charged to YOUR Replicate account for free mode users
# Recommendation: Set up billing alerts to monitor usage
# REPLICATE_API_KEY=

# ============================================================================
# CLIENT-SIDE ENVIRONMENT VARIABLES
# ============================================================================
# Variables prefixed with VITE_ are bundled into the client JavaScript
# and are publicly visible - NEVER put secrets here!

# Google Client ID for Frontend
# REQUIRED: Yes - Used by the frontend for Google Sign-In button
# Format: Same as GOOGLE_CLIENT_ID above
# Valid values: Must match GOOGLE_CLIENT_ID value
# Used in: Client-side Google Sign-In component
# Note: This is safe to expose publicly (it's designed to be client-side)
VITE_GOOGLE_CLIENT_ID=your_google_client_id_here

# ============================================================================
# SETUP CHECKLIST
# ============================================================================
# [ ] Copy this file to .env
# [ ] Set DATABASE_URL with your PostgreSQL connection string
# [ ] Create Google OAuth credentials and set GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET
# [ ] Generate JWT_SECRET (32+ random characters)
# [ ] Generate ENCRYPTION_KEY (exactly 32 characters)
# [ ] Set VITE_GOOGLE_CLIENT_ID (same value as GOOGLE_CLIENT_ID)
# [ ] (Optional) Set OPENAI_API_KEY and/or REPLICATE_API_KEY for free mode
# [ ] Verify .env is in .gitignore
# [ ] Run database migrations: npm run db:push
# [ ] Test the application
# ============================================================================